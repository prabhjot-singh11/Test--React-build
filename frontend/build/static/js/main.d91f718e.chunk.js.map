{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/layout/Search.js","components/layout/Header.js","components/layout/Footer.js","components/layout/MetaData.js","components/product/Product.js","components/layout/Loader.js","components/layout/Corsol.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/review/ListReviews.js","constants/cartConstants.js","actions/cartActions.js","components/product/ProductDetails.js","components/cart/Cart.js","components/cart/CheckoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstants.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/order/OrderDetails.js","components/user/Login.js","components/user/Register.js","components/user/Profile.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/ProductsList.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrdersList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","components/route/ProtectedRoute.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","App.js","index.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","CLEAR_ERRORS","loadUser","dispatch","a","type","axios","get","data","payload","user","response","message","allUsers","users","clearErrors","Search","history","useState","keyword","setKeyword","onSubmit","e","preventDefault","trim","push","className","id","placeholder","onChange","target","value","aria-hidden","Header","alert","useAlert","useDispatch","useSelector","state","auth","loading","cartItems","cart","to","src","render","style","textDecoration","length","data-toggle","aria-haspopup","aria-expanded","avatar","url","alt","name","aria-labelledby","role","onClick","success","Footer","MetaData","title","Helmet","Product","product","col","images","_id","width","ratings","numOfReviews","price","Loader","Corsol","Carousel","Item","height","Caption","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","getProductDetails","getAdminProducts","products","getProductReviews","reviews","Range","createSliderWithTooltip","Slider","Home","match","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","error","productsCount","resPerPage","filteredProductsCount","params","useEffect","link","getProducts","count","console","log","marks","1","1000","min","max","defaultValue","tipFormatter","tipProps","placement","visible","map","cursor","listStyleType","star","activePage","itemsCountPerPage","totalItemsCount","pageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","ListReviews","class","review","comment","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","setComment","productDetails","newReview","reviewError","pause","public_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","data-target","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","data-dismiss","aria-label","reviewData","formData","FormData","set","config","headers","put","Cart","removeCartItemHandler","removeItemFromCart","item","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","htmlFor","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_RESET","UPDATE_ORDER_FAIL","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_RESET","DELETE_ORDER_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","createOrder","order","post","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","email","result","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","String","includes","actions","setOrders","bordered","striped","hover","OrderDetails","orderDetails","shippingDetails","isPaid","Login","location","setEmail","password","setPassword","isAuthenticated","redirect","search","split","login","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","readAsDataURL","files","userData","encType","accept","Profile","createdAt","substring","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","for","ForgotPassword","forgotPassword","NewPassword","confirmPassword","setConfirmPassword","token","Sidebar","href","Dashboard","totalAmount","outOfStock","ProductsList","deleteError","isDeleted","deleteProductHandler","delete","deleteProduct","setProducts","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","deleteOrderHandler","deleteOrder","numofItems","ProcessOrder","setStatus","orderId","updateOrderHandler","orderData","updateOrder","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReview","setReviews","ProtectedRoute","isAdmin","Component","component","rest","props","reducer","combineReducers","action","isItemExist","find","i","filter","initialState","middlware","thunk","store","createStore","composeWithDevTools","applyMiddleware","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.d91f718e.chunk.js","sourcesContent":["export const LOGIN_REQUEST = 'LOGIN_REQUEST'\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\r\n\r\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\r\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\r\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\r\n\r\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\r\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\r\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\r\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\r\n\r\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\r\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\r\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\r\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS'\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\r\n\r\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\r\nexport const NEW_PASSWORD_SUCCESS = 'NEW_PASSWORD_SUCCESS'\r\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL'\r\n\r\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\r\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\r\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\r\n\r\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\r\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\r\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\r\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\r\n\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\r\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\n// Login\r\nexport const login = (email, password) => async (dispatch) => {\r\n   \r\n    try {\r\n\r\n        dispatch({ type: LOGIN_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n       \r\n        const { data } = await axios.post('/api/v1/login', { email, password }, config)\r\n      \r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n const message = \"Email or password is incorrect\"\r\n\r\n        dispatch({\r\n            type: LOGIN_FAIL,\r\n            payload:message\r\n        })\r\n    }\r\n}\r\n\r\n// Register user\r\nexport const register = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: REGISTER_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/register', userData, config)\r\nconsole.log(data);\r\n        dispatch({\r\n            type: REGISTER_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n     let mesage = \"please check the email address and password should be longer then 6 charchters\"\r\n        dispatch({\r\n            type: REGISTER_USER_FAIL,\r\n            payload: mesage\r\n        })\r\n    }\r\n}\r\n\r\n// Load user\r\nexport const loadUser = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: LOAD_USER_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/me')\r\n\r\n        dispatch({\r\n            type: LOAD_USER_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOAD_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update profile\r\nexport const updateProfile = (userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PROFILE_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PROFILE_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update password\r\nexport const updatePassword = (passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Forgot password\r\nexport const forgotPassword = (email) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: FORGOT_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\r\n\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_SUCCESS,\r\n            payload: data.message\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: FORGOT_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Reset password\r\nexport const resetPassword = (token, passwords) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PASSWORD_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\r\n\r\n        dispatch({\r\n            type: NEW_PASSWORD_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PASSWORD_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Logout user\r\nexport const logout = () => async (dispatch) => {\r\n    try {\r\n\r\n        await axios.get('/api/v1/logout')\r\n\r\n        dispatch({\r\n            type: LOGOUT_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGOUT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all users\r\nexport const allUsers = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_USERS_REQUEST })\r\n\r\n        const { data } = await axios.get('/api/v1/admin/users')\r\n\r\n        dispatch({\r\n            type: ALL_USERS_SUCCESS,\r\n            payload: data.users\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_USERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update user - ADMIN\r\nexport const updateUser = (id, userData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_USER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get user details - ADMIN\r\nexport const getUserDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: USER_DETAILS_REQUEST })\r\n\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data.user\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete user - ADMIN\r\nexport const deleteUser = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_USER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_USER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_USER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { useState } from 'react'\r\n\r\nconst Search = ({ history }) => {\r\n\r\n    const [keyword, setKeyword] = useState('');\r\n\r\n    const searchHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (keyword.trim()) {\r\n            history.push(`/search/${keyword}`)\r\n        } else {\r\n            history.push('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={searchHandler} >\r\n            <div className=\"input-group\">\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"search_field\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter Product Name ...\"\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                />\r\n                <div className=\"input-group-append\">\r\n                    <button id=\"search_btn\" className=\"btn\">\r\n                        <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert'\r\nimport { logout } from '../../actions/userActions'\r\n\r\nimport Search from './Search'\r\n\r\nimport '../../App.css'\r\n\r\nconst Header = () => {\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout());\r\n        alert.success('Logged out successfully.')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <nav className=\"navbar row\">\r\n                <div className=\"col-12 col-md-3\">\r\n                    <div className=\"navbar-brand\">\r\n                        <Link to=\"/\">\r\n                            <img src=\"/images/shopit_logo.png\" />\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\r\n                    <Route render={({ history }) => <Search history={history} />} />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\r\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }} >\r\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\r\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\r\n                    </Link>\r\n\r\n                    {user ? (\r\n                        <div className=\"ml-4 dropdown d-inline\">\r\n                            <Link to=\"#!\" className=\"btn dropdown-toggle text-white mr-4\" type=\"button\" id=\"dropDownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n\r\n                                <figure className=\"avatar avatar-nav\">\r\n                                    <img\r\n                                        src={user.avatar && user.avatar.url}\r\n                                        alt={user && user.name}\r\n                                        className=\"rounded-circle\"\r\n                                    />\r\n                                </figure>\r\n                                <span>{user && user.name}</span>\r\n                            </Link>\r\n\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropDownMenuButton\">\r\n\r\n                                {user && user.role === 'admin' && (\r\n                                    <Link className=\"dropdown-item\" to=\"/dashboard\">Dashboard</Link>\r\n                                )}\r\n                                <Link className=\"dropdown-item\" to=\"/orders/me\">Orders</Link>\r\n                                <Link className=\"dropdown-item\" to=\"/me\">Profile</Link>\r\n                                <Link className=\"dropdown-item text-danger\" to=\"/\" onClick={logoutHandler}>\r\n                                    Logout\r\n                                </Link>\r\n\r\n                            </div>\r\n\r\n\r\n                        </div>\r\n\r\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>}\r\n\r\n\r\n                </div>\r\n            </nav>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { Fragment } from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <Fragment>\r\n            <footer className=\"py-1\">\r\n                <p className=\"text-center mt-1\">\r\n                    Shopping Cart - 2019-2020, All Rights Reserved\r\n                </p>\r\n            </footer>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst MetaData = ({ title }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{`${title} - ShopIT`}</title>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\nexport default MetaData\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Carousel from 'react-bootstrap/Carousel';\r\n\r\nconst Product = ({ product, col }) => {\r\n    return (\r\n     \r\n\r\n\r\n\r\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\r\n            <div className=\"card p-3 rounded\">\r\n                <img\r\n                    className=\"card-img-top mx-auto\"\r\n                    src={product.images[0].url}\r\n                />\r\n                <div className=\"card-body d-flex flex-column\">\r\n                    <h5 className=\"card-title\">\r\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\r\n                    </h5>\r\n                    <div className=\"ratings mt-auto\">\r\n                        <div className=\"rating-outer\">\r\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                        </div>\r\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n                    </div>\r\n                    <p className=\"card-text\">${product.price}</p>\r\n                    <Link to={`/product/${product._id}`} id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\"> </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport Carousel from 'react-bootstrap/Carousel';\r\nimport axios from 'axios';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nconst Corsol = () => {\r\n    \r\n  return (\r\n    <div> <Carousel>\r\n    <Carousel.Item>\r\n      <img \r\n        className=\"d-block w-100 h-200\"\r\n        src=\"/images/first.jpg\"\r\n        alt=\"First slide\"\r\n        style={{height:\"400px\"}}\r\n      />\r\n     \r\n      <Carousel.Caption>\r\n        <h3>Get the exited product</h3>\r\n        <p>Headphon are on 30% descount</p>\r\n      </Carousel.Caption>\r\n    </Carousel.Item>\r\n    <Carousel.Item>\r\n      <img \r\n        className=\"d-block w-100\"\r\n        src=\"/images/secend.jpg\"\r\n        alt=\"Second slide\"\r\n        style={{height:\"400px\"}}\r\n      />\r\n\r\n      <Carousel.Caption>\r\n        <h3>New offer</h3>\r\n        <p>get the product on discounted price</p>\r\n      </Carousel.Caption>\r\n    </Carousel.Item>\r\n    <Carousel.Item>\r\n      <img \r\n        className=\"d-block w-100\"\r\n        src=\"/images/third.jpg\"\r\n        alt=\"Third slide\"\r\n        style={{height:\"400px\"}}\r\n      />\r\n\r\n      <Carousel.Caption>\r\n        <h3>Biggest sale</h3>\r\n        <p>\r\n        Get amazing products on our website\r\n        </p>\r\n      </Carousel.Caption>\r\n    </Carousel.Item>\r\n  </Carousel></div>\r\n  )\r\n}\r\n\r\nexport default Corsol","export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\r\nexport const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\r\nexport const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\r\n\r\nexport const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\r\nexport const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\r\nexport const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL'\r\n\r\nexport const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\r\nexport const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\r\nexport const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\r\nexport const NEW_PRODUCT_FAIL = 'NEW_PRODUCT_FAIL'\r\n\r\nexport const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\r\nexport const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\r\nexport const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\r\nexport const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\r\n\r\nexport const UPDATE_PRODUCT_REQUEST = 'UPDATE_PRODUCT_REQUEST'\r\nexport const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\r\nexport const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\r\nexport const UPDATE_PRODUCT_FAIL = 'UPDATE_PRODUCT_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\r\nexport const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\r\nexport const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\r\nexport const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\r\n\r\nexport const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\r\nexport const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\r\nexport const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\r\n\r\nexport const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\r\nexport const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\r\nexport const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\r\nexport const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\r\n\r\nimport {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\r\n\r\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\r\n\r\n        if (category) {\r\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\r\n        }\r\n\r\n        const { data } = await axios.get(link)\r\n\r\n        dispatch({\r\n            type: ALL_PRODUCTS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newProduct = (productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\r\n\r\n        dispatch({\r\n            type: NEW_PRODUCT_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product (Admin)\r\nexport const deleteProduct = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Update Product (ADMIN)\r\nexport const updateProduct = (id, productData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_PRODUCT_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data.product\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const newReview = (reviewData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: NEW_REVIEW_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\r\n\r\n        dispatch({\r\n            type: NEW_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAdminProducts = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/products`)\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_SUCCESS,\r\n            payload: data.products\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: ADMIN_PRODUCTS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get product reviews\r\nexport const getProductReviews = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: GET_REVIEWS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_SUCCESS,\r\n            payload: data.reviews\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: GET_REVIEWS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete product review\r\nexport const deleteReview = (id, productId) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_REVIEW_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n\r\n        console.log(error.response);\r\n\r\n        dispatch({\r\n            type: DELETE_REVIEW_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport Pagination from 'react-js-pagination'\r\nimport Slider from 'rc-slider'\r\nimport 'rc-slider/assets/index.css';\r\n\r\nimport MetaData from './layout/MetaData'\r\nimport Product from './product/Product'\r\nimport Loader from './layout/Loader'\r\nimport Corsol from './layout/Corsol';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useAlert } from 'react-alert';\r\nimport { getProducts } from '../actions/productActions'\r\n\r\nconst { createSliderWithTooltip } = Slider;\r\nconst Range = createSliderWithTooltip(Slider.Range)\r\n\r\nconst Home = ({ match }) => {\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [price, setPrice] = useState([1, 1000])\r\n    const [category, setCategory] = useState('')\r\n    const [rating, setRating] = useState(0)\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\r\n\r\n    const keyword = match.params.keyword\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            return alert.error(error)\r\n        }\r\n\r\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\r\n\r\n\r\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\r\n\r\n    function setCurrentPageNo(pageNumber) {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    let count = productsCount;\r\n    if (keyword) {\r\n        count = filteredProductsCount\r\n    }\r\n\r\n    console.log(products);\r\n\r\n    return (\r\n        <Fragment>\r\n        \r\n        {keyword ? (\"\"):(<Corsol></Corsol>)}\r\n      \r\n                <Fragment>\r\n                    <MetaData title={'Buy Best Products Online'} />\r\n\r\n                    <h1 id=\"products_heading\">Latest Products</h1>\r\n\r\n                    <section id=\"products\" className=\"container mt-5\">\r\n                        <div className=\"row\">\r\n\r\n                            {keyword ? (\r\n                                <Fragment>\r\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\r\n                                        <div className=\"px-5\">\r\n                                            <Range\r\n                                                marks={{\r\n                                                    1: `$1`,\r\n                                                    1000: `$1000`\r\n                                                }}\r\n                                                min={1}\r\n                                                max={1000}\r\n                                                defaultValue={[1, 1000]}\r\n                                                tipFormatter={value => `$${value}`}\r\n                                                tipProps={{\r\n                                                    placement: \"top\",\r\n                                                    visible: true\r\n                                                }}\r\n                                                value={price}\r\n                                                onChange={price => setPrice(price)}\r\n                                            />\r\n\r\n                                            <hr className=\"my-5\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Categories\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {categories.map(category => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={category}\r\n                                                            onClick={() => setCategory(category)}\r\n                                                        >\r\n                                                            {category}\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                            <hr className=\"my-3\" />\r\n\r\n                                            <div className=\"mt-5\">\r\n                                                <h4 className=\"mb-3\">\r\n                                                    Ratings\r\n                                                </h4>\r\n\r\n                                                <ul className=\"pl-0\">\r\n                                                    {[5, 4, 3, 2, 1].map(star => (\r\n                                                        <li\r\n                                                            style={{\r\n                                                                cursor: 'pointer',\r\n                                                                listStyleType: 'none'\r\n                                                            }}\r\n                                                            key={star}\r\n                                                            onClick={() => setRating(star)}\r\n                                                        >\r\n                                                            <div className=\"rating-outer\">\r\n                                                                <div className=\"rating-inner\"\r\n                                                                    style={{\r\n                                                                        width: `${star * 20}%`\r\n                                                                    }}\r\n                                                                >\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </li>\r\n                                                    ))}\r\n                                                </ul>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-6 col-md-9\">\r\n                                        <div className=\"row\">\r\n                                            {products.map(product => (\r\n                                                <Product key={product._id} product={product} col={4} />\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </Fragment>\r\n                            ) : (\r\n                                    products.map(product => (\r\n                                        <Product key={product._id} product={product} col={3} />\r\n                                    ))\r\n                                )}\r\n\r\n                        </div>\r\n                    </section>\r\n\r\n                    {resPerPage <= count && (\r\n                        <div className=\"d-flex justify-content-center mt-5\">\r\n                            <Pagination\r\n                                activePage={currentPage}\r\n                                itemsCountPerPage={resPerPage}\r\n                                totalItemsCount={productsCount}\r\n                                onChange={setCurrentPageNo}\r\n                                nextPageText={'Next'}\r\n                                prevPageText={'Prev'}\r\n                                firstPageText={'First'}\r\n                                lastPageText={'Last'}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            />\r\n                        </div>\r\n                    )}\r\n\r\n                </Fragment>\r\n            \r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst ListReviews = ({ reviews }) => {\r\n    return (\r\n        <div class=\"reviews w-75\">\r\n            <h3>Other's Reviews:</h3>\r\n            <hr />\r\n            {reviews && reviews.map(review => (\r\n                <div key={review._id} class=\"review-card my-3\">\r\n                    <div class=\"rating-outer\">\r\n                        <div class=\"rating-inner\" style={{ width: `${(review.rating / 5) * 100}%` }}></div>\r\n                    </div>\r\n                    <p class=\"review_user\">by {review.name}</p>\r\n                    <p class=\"review_comment\">{review.comment}</p>\r\n\r\n                    <hr />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListReviews\r\n","export const ADD_TO_CART = 'ADD_TO_CART'\r\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\r\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'","import axios from 'axios'\r\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const addItemToCart = (id, quantity) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/v1/product/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_TO_CART,\r\n        payload: {\r\n            product: data.product._id,\r\n            name: data.product.name,\r\n            price: data.product.price,\r\n            image: data.product.images[0].url,\r\n            stock: data.product.stock,\r\n            quantity\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeItemFromCart = (id) => async (dispatch, getState) => {\r\n\r\n    dispatch({\r\n        type: REMOVE_ITEM_CART,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n\r\n}\r\n\r\nexport const saveShippingInfo = (data) => async (dispatch) => {\r\n\r\n    dispatch({\r\n        type: SAVE_SHIPPING_INFO,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\r\n\r\n}","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Carousel } from 'react-bootstrap'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\nimport ListReviews from '../review/ListReviews'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductDetails, newReview, clearErrors } from '../../actions/productActions'\r\nimport { addItemToCart } from '../../actions/cartActions'\r\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductDetails = ({ match }) => {\r\n\r\n    const [quantity, setQuantity] = useState(1)\r\n    const [rating, setRating] = useState(0);\r\n    const [comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n\r\n    const { loading, error, product } = useSelector(state => state.productDetails)\r\n    const { user } = useSelector(state => state.auth)\r\n    const { error: reviewError, success } = useSelector(state => state.newReview)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductDetails(match.params.id))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (reviewError) {\r\n            alert.error(reviewError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Reivew posted successfully')\r\n            dispatch({ type: NEW_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, reviewError, match.params.id, success])\r\n\r\n    const addToCart = () => {\r\n        dispatch(addItemToCart(match.params.id, quantity));\r\n        alert.success('Item Added to Cart')\r\n    }\r\n\r\n    const increaseQty = () => {\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber >= product.stock) return;\r\n\r\n        const qty = count.valueAsNumber + 1;\r\n        setQuantity(qty)\r\n    }\r\n\r\n    const decreaseQty = () => {\r\n\r\n        const count = document.querySelector('.count')\r\n\r\n        if (count.valueAsNumber <= 1) return;\r\n\r\n        const qty = count.valueAsNumber - 1;\r\n        setQuantity(qty)\r\n\r\n    }\r\n\r\n    function setUserRatings() {\r\n        const stars = document.querySelectorAll('.star');\r\n\r\n        stars.forEach((star, index) => {\r\n            star.starValue = index + 1;\r\n\r\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\r\n                star.addEventListener(e, showRatings);\r\n            })\r\n        })\r\n\r\n        function showRatings(e) {\r\n            stars.forEach((star, index) => {\r\n                if (e.type === 'click') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('orange');\r\n\r\n                        setRating(this.starValue)\r\n                    } else {\r\n                        star.classList.remove('orange')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseover') {\r\n                    if (index < this.starValue) {\r\n                        star.classList.add('yellow');\r\n                    } else {\r\n                        star.classList.remove('yellow')\r\n                    }\r\n                }\r\n\r\n                if (e.type === 'mouseout') {\r\n                    star.classList.remove('yellow')\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const reviewHandler = () => {\r\n        const formData = new FormData();\r\n\r\n        formData.set('rating', rating);\r\n        formData.set('comment', comment);\r\n        formData.set('productId', match.params.id);\r\n\r\n        dispatch(newReview(formData));\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={product.name} />\r\n                    <div className=\"row d-flex justify-content-around\">\r\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\r\n                            <Carousel pause='hover'>\r\n                                {product.images && product.images.map(image => (\r\n                                    <Carousel.Item key={image.public_id}>\r\n                                        <img className=\"d-block w-100\" src={image.url} alt={product.title} />\r\n                                    </Carousel.Item>\r\n                                ))}\r\n                            </Carousel>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-5 mt-5\">\r\n                            <h3>{product.name}</h3>\r\n                            <p id=\"product_id\">Product # {product._id}</p>\r\n\r\n                            <hr />\r\n\r\n                            <div className=\"rating-outer\">\r\n                                <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\r\n                            </div>\r\n                            <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\r\n\r\n                            <hr />\r\n\r\n                            <p id=\"product_price\">${product.price}</p>\r\n                            <div className=\"stockCounter d-inline\">\r\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\r\n\r\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\r\n\r\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\r\n                            </div>\r\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product.stock === 0} onClick={addToCart}>Add to Cart</button>\r\n\r\n                            <hr />\r\n\r\n                            <p>Status: <span id=\"stock_status\" className={product.stock > 0 ? 'greenColor' : 'redColor'} >{product.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"mt-2\">Description:</h4>\r\n                            <p>{product.description}</p>\r\n                            <hr />\r\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product.seller}</strong></p>\r\n\r\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\r\n                                Submit Your Review\r\n                            </button>\r\n                                :\r\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\r\n                            }\r\n\r\n\r\n                            <div className=\"row mt-2 mb-5\">\r\n                                <div className=\"rating w-50\">\r\n\r\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\r\n                                        <div className=\"modal-dialog\" role=\"document\">\r\n                                            <div className=\"modal-content\">\r\n                                                <div className=\"modal-header\">\r\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\r\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                                                        <span aria-hidden=\"true\">&times;</span>\r\n                                                    </button>\r\n                                                </div>\r\n                                                <div className=\"modal-body\">\r\n\r\n                                                    <ul className=\"stars\" >\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\r\n                                                    </ul>\r\n\r\n                                                    <textarea\r\n                                                        name=\"review\"\r\n                                                        id=\"review\" className=\"form-control mt-3\"\r\n                                                        value={comment}\r\n                                                        onChange={(e) => setComment(e.target.value)}\r\n                                                    >\r\n\r\n                                                    </textarea>\r\n\r\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" onClick={reviewHandler} data-dismiss=\"modal\" aria-label=\"Close\">Submit</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {product.reviews && product.reviews.length > 0 && (\r\n                        <ListReviews reviews={product.reviews} />\r\n                    )}\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductDetails\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { addItemToCart, removeItemFromCart } from '../../actions/cartActions'\r\n\r\nconst Cart = ({ history }) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { cartItems } = useSelector(state => state.cart)\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeItemFromCart(id))\r\n    }\r\n\r\n    const increaseQty = (id, quantity, stock) => {\r\n        const newQty = quantity + 1;\r\n\r\n        if (newQty > stock) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n    }\r\n\r\n    const decreaseQty = (id, quantity) => {\r\n\r\n        const newQty = quantity - 1;\r\n\r\n        if (newQty <= 0) return;\r\n\r\n        dispatch(addItemToCart(id, newQty))\r\n\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Your Cart'} />\r\n            {cartItems.length === 0 ? <h2 className=\"mt-5\">Your Cart is Empty</h2> : (\r\n                <Fragment>\r\n                    <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length} items</b></h2>\r\n\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8\">\r\n\r\n                            {cartItems.map(item => (\r\n                                <Fragment>\r\n                                    <hr />\r\n\r\n                                    <div className=\"cart-item\" key={item.product}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-4 col-lg-3\">\r\n                                                <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\" />\r\n                                            </div>\r\n\r\n                                            <div className=\"col-5 col-lg-3\">\r\n                                                <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                <p id=\"card_item_price\">${item.price}</p>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                <div className=\"stockCounter d-inline\">\r\n                                                    <span className=\"btn btn-danger minus\" onClick={() => decreaseQty(item.product, item.quantity)}>-</span>\r\n\r\n                                                    <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\r\n\r\n                                                    <span className=\"btn btn-primary plus\" onClick={() => increaseQty(item.product, item.quantity, item.stock)}>+</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\r\n                                                <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={() => removeCartItemHandler(item.product)} ></i>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr />\r\n                                </Fragment>\r\n                            ))}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-lg-3 my-4\">\r\n                            <div id=\"order_summary\">\r\n                                <h4>Order Summary</h4>\r\n                                <hr />\r\n                                <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc, item) => (acc + Number(item.quantity)), 0)} (Units)</span></p>\r\n                                <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc, item) => acc + item.quantity * item.price, 0).toFixed(2)}</span></p>\r\n\r\n                                <hr />\r\n                                <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst CheckoutSteps = ({ shipping, confirmOrder, payment }) => {\r\n    return (\r\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\r\n\r\n            {shipping ? <Link to='shipping' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Shipping</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Shipping</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Confirm Order</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Confirm Order</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n            {payment ? <Link to='/payment' className=\"float-right\">\r\n                <div className=\"triangle2-active\"></div>\r\n                <div className=\"step active-step\">Payment</div>\r\n                <div className=\"triangle-active\"></div>\r\n            </Link> : <Link to=\"#!\" disabled>\r\n                    <div className=\"triangle2-incomplete\"></div>\r\n                    <div className=\"step incomplete\">Payment</div>\r\n                    <div className=\"triangle-incomplete\"></div>\r\n                </Link>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { Fragment, useState } from 'react'\r\nimport { countries } from 'countries-list'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { saveShippingInfo } from '../../actions/cartActions'\r\n\r\nconst Shipping = ({ history }) => {\r\n\r\n    const countriesList = Object.values(countries)\r\n\r\n    const { shippingInfo } = useSelector(state => state.cart)\r\n\r\n    const [address, setAddress] = useState(shippingInfo.address)\r\n    const [city, setCity] = useState(shippingInfo.city)\r\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\r\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\r\n    const [country, setCountry] = useState(shippingInfo.country)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\r\n        history.push('/confirm')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Shipping Info'} />\r\n\r\n            <CheckoutSteps shipping />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Shipping Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"address_field\">Address</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"address_field\"\r\n                                className=\"form-control\"\r\n                                value={address}\r\n                                onChange={(e) => setAddress(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"city_field\">City</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                id=\"city_field\"\r\n                                className=\"form-control\"\r\n                                value={city}\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"phone_field\">Phone No</label>\r\n                            <input\r\n                                type=\"phone\"\r\n                                id=\"phone_field\"\r\n                                className=\"form-control\"\r\n                                value={phoneNo}\r\n                                onChange={(e) => setPhoneNo(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\r\n                            <input\r\n                                type=\"number\"\r\n                                id=\"postal_code_field\"\r\n                                className=\"form-control\"\r\n                                value={postalCode}\r\n                                onChange={(e) => setPostalCode(e.target.value)}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"country_field\">Country</label>\r\n                            <select\r\n                                id=\"country_field\"\r\n                                className=\"form-control\"\r\n                                value={country}\r\n                                onChange={(e) => setCountry(e.target.value)}\r\n                                required\r\n                            >\r\n\r\n                                {countriesList.map(country => (\r\n                                    <option key={country.name} value={country.name}>\r\n                                        {country.name}\r\n                                    </option>\r\n                                ))}\r\n\r\n                            </select>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"shipping_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            CONTINUE\r\n                            </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Shipping\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ConfirmOrder = ({ history }) => {\r\n\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\r\n    const { user } = useSelector(state => state.auth)\r\n\r\n    // Calculate Order Prices\r\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\r\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\r\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\r\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\r\n\r\n    const processToPayment = () => {\r\n        const data = {\r\n            itemsPrice: itemsPrice.toFixed(2),\r\n            shippingPrice,\r\n            taxPrice,\r\n            totalPrice\r\n        }\r\n\r\n        sessionStorage.setItem('orderInfo', JSON.stringify(data))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Confirm Order'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder />\r\n\r\n            <div className=\"row d-flex justify-content-between\">\r\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\r\n\r\n                    <h4 className=\"mb-3\">Shipping Info</h4>\r\n                    <p><b>Name:</b> {user && user.name}</p>\r\n                    <p><b>Phone:</b> {shippingInfo.phoneNo}</p>\r\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\r\n\r\n                    <hr />\r\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\r\n\r\n                    {cartItems.map(item => (\r\n                        <Fragment>\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\" key={item.product}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-4 col-lg-2\">\r\n                                        <img src={item.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\r\n                                    </div>\r\n\r\n                                    <div className=\"col-5 col-lg-6\">\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </div>\r\n\r\n\r\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\r\n                                        <p>{item.quantity} x ${item.price} = <b>${(item.quantity * item.price).toFixed(2)}</b></p>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <hr />\r\n                        </Fragment>\r\n                    ))}\r\n\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 my-4\">\r\n                    <div id=\"order_summary\">\r\n                        <h4>Order Summary</h4>\r\n                        <hr />\r\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\r\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\r\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\r\n\r\n                        <hr />\r\n\r\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\r\n\r\n                        <hr />\r\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ConfirmOrder\r\n","export const CREATE_ORDER_REQUEST = 'CREATE_ORDER_REQUEST'\r\nexport const CREATE_ORDER_SUCCESS = 'CREATE_ORDER_SUCCESS'\r\nexport const CREATE_ORDER_FAIL = 'CREATE_ORDER_FAIL'\r\n\r\nexport const MY_ORDERS_REQUEST = 'MY_ORDERS_REQUEST'\r\nexport const MY_ORDERS_SUCCESS = 'MY_ORDERS_SUCCESS'\r\nexport const MY_ORDERS_FAIL = 'MY_ORDERS_FAIL'\r\n\r\nexport const ALL_ORDERS_REQUEST = 'ALL_ORDERS_REQUEST'\r\nexport const ALL_ORDERS_SUCCESS = 'ALL_ORDERS_SUCCESS'\r\nexport const ALL_ORDERS_FAIL = 'ALL_ORDERS_FAIL'\r\n\r\nexport const UPDATE_ORDER_REQUEST = 'UPDATE_ORDER_REQUEST'\r\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\r\nexport const UPDATE_ORDER_RESET = 'UPDATE_ORDER_RESET'\r\nexport const UPDATE_ORDER_FAIL = 'UPDATE_ORDER_FAIL'\r\n\r\nexport const DELETE_ORDER_REQUEST = 'DELETE_ORDER_REQUEST'\r\nexport const DELETE_ORDER_SUCCESS = 'DELETE_ORDER_SUCCESS'\r\nexport const DELETE_ORDER_RESET = 'DELETE_ORDER_RESET'\r\nexport const DELETE_ORDER_FAIL = 'DELETE_ORDER_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\r\n\r\nimport {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n\r\n        dispatch({ type: CREATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/v1/order/new', order, config)\r\n\r\n        dispatch({\r\n            type: CREATE_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get curretly logged in user orders\r\nexport const myOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get('/api/v1/orders/me')\r\n        console.log(\"hhhhhhhh\"+data)\r\n        dispatch({\r\n            type: MY_ORDERS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get order details\r\nexport const getOrderDetails = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/order/${id}`)\r\n        \r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data.order\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Get all orders - ADMIN\r\nexport const allOrders = () => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: ALL_ORDERS_REQUEST });\r\n\r\n        const { data } = await axios.get(`/api/v1/admin/orders`)\r\n\r\n        dispatch({\r\n            type: ALL_ORDERS_SUCCESS,\r\n            payload: data\r\n        })\r\n       \r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ALL_ORDERS_FAIL,\r\n           \r\n        })\r\n    }\r\n}\r\n\r\n// update order\r\nexport const updateOrder = (id, orderData) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: UPDATE_ORDER_REQUEST })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\r\n\r\n        dispatch({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: UPDATE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n// Delete order\r\nexport const deleteOrder = (id) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({ type: DELETE_ORDER_REQUEST })\r\n\r\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\r\n\r\n        dispatch({\r\n            type: DELETE_ORDER_SUCCESS,\r\n            payload: data.success\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DELETE_ORDER_FAIL,\r\n            payload: error.response.data.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// Clear Errors\r\nexport const clearErrors = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n}","import React, { Fragment, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport CheckoutSteps from './CheckoutSteps'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { createOrder, clearErrors } from '../../actions/orderActions'\r\n\r\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\r\n\r\nimport axios from 'axios'\r\n\r\nconst options = {\r\n    style: {\r\n        base: {\r\n            fontSize: '16px'\r\n        },\r\n        invalid: {\r\n            color: '#9e2146'\r\n        }\r\n    }\r\n}\r\n\r\nconst Payment = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth)\r\n    const { cartItems, shippingInfo } = useSelector(state => state.cart);\r\n    const { error } = useSelector(state => state.newOrder)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error)\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n    }, [dispatch, alert, error])\r\n\r\n    const order = {\r\n        orderItems: cartItems,\r\n        shippingInfo\r\n    }\r\n\r\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'));\r\n    if (orderInfo) {\r\n        order.itemsPrice = orderInfo.itemsPrice\r\n        order.shippingPrice = orderInfo.shippingPrice\r\n        order.taxPrice = orderInfo.taxPrice\r\n        order.totalPrice = orderInfo.totalPrice\r\n    }\r\n\r\n    const paymentData = {\r\n        amount: Math.round(orderInfo.totalPrice * 100)\r\n    }\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        document.querySelector('#pay_btn').disabled = true;\r\n\r\n        let res;\r\n        try {\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n\r\n            res = await axios.post('/api/v1/payment/process', paymentData, config)\r\n\r\n            const clientSecret = res.data.client_secret;\r\n\r\n            console.log(clientSecret);\r\n\r\n            if (!stripe || !elements) {\r\n                return;\r\n            }\r\n\r\n            const result = await stripe.confirmCardPayment(clientSecret, {\r\n                payment_method: {\r\n                    card: elements.getElement(CardNumberElement),\r\n                    billing_details: {\r\n                        name: user.name,\r\n                        email: user.email\r\n                    }\r\n                }\r\n            });\r\n\r\n            if (result.error) {\r\n                alert.error(result.error.message);\r\n                document.querySelector('#pay_btn').disabled = false;\r\n            } else {\r\n\r\n                // The payment is processed or not\r\n                if (result.paymentIntent.status === 'succeeded') {\r\n\r\n                    order.paymentInfo = {\r\n                        id: result.paymentIntent.id,\r\n                        status: result.paymentIntent.status\r\n                    }\r\n\r\n                    dispatch(createOrder(order))\r\n\r\n                    history.push('/success')\r\n                } else {\r\n                    alert.error('There is some issue while payment processing')\r\n                }\r\n            }\r\n\r\n\r\n        } catch (error) {\r\n            document.querySelector('#pay_btn').disabled = false;\r\n            alert.error(error.response.data.message)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Payment'} />\r\n\r\n            <CheckoutSteps shipping confirmOrder payment />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-4\">Card Info</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_num_field\">Card Number</label>\r\n                            <CardNumberElement\r\n                                type=\"text\"\r\n                                id=\"card_num_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_exp_field\">Card Expiry</label>\r\n                            <CardExpiryElement\r\n                                type=\"text\"\r\n                                id=\"card_exp_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"card_cvc_field\">Card CVC</label>\r\n                            <CardCvcElement\r\n                                type=\"text\"\r\n                                id=\"card_cvc_field\"\r\n                                className=\"form-control\"\r\n                                options={options}\r\n                            />\r\n                        </div>\r\n\r\n\r\n                        <button\r\n                            id=\"pay_btn\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                        >\r\n                            Pay {` - ${orderInfo && orderInfo.totalPrice}`}\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst OrderSuccess = () => {\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Order Success'} />\r\n\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-6 mt-5 text-center\">\r\n                    <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\r\n\r\n                    <h2>Your Order has been placed successfully.</h2>\r\n\r\n                    <Link to=\"/orders/me\">Go to Orders</Link>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderSuccess\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { myOrders, clearErrors } from '../../actions/orderActions'\r\n\r\nconst ListOrders = () => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.myOrders);\r\n\r\n    useEffect(() => {\r\n        dispatch(myOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error])\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Num of Items',\r\n                    field: 'numOfItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                    sort: 'asc'\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numOfItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions:\r\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'My Orders'} />\r\n\r\n            <h1 className=\"my-5\">My Orders</h1>\r\n\r\n            {loading ? <Loader /> : (\r\n                <MDBDataTable\r\n                    data={setOrders()}\r\n                    className=\"px-3\"\r\n                    bordered\r\n                    striped\r\n                    hover\r\n                />\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ListOrders\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\r\n\r\nconst OrderDetails = ({ match }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n\r\n    useEffect(() => {\r\n        dispatch(getOrderDetails(match.params.id));\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n    }, [dispatch, alert, error, match.params.id])\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Order Details'} />\r\n\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <div className=\"row d-flex justify-content-between\">\r\n                        <div className=\"col-12 col-lg-8 mt-5 order-details\">\r\n\r\n                            <h1 className=\"my-5\">Order # {order._id}</h1>\r\n\r\n                            <h4 className=\"mb-4\">Shipping Info</h4>\r\n                            <p><b>Name:</b> {user && user.name}</p>\r\n                            <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                            <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                            <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                            <hr />\r\n\r\n                            <h4 className=\"my-4\">Payment</h4>\r\n                            <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Status:</h4>\r\n                            <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n                            <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                            <hr />\r\n                            <div className=\"cart-item my-1\">\r\n                                {orderItems && orderItems.map(item => (\r\n                                    <div key={item.product} className=\"row my-5\">\r\n                                        <div className=\"col-4 col-lg-2\">\r\n                                            <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                        </div>\r\n\r\n                                        <div className=\"col-5 col-lg-5\">\r\n                                            <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                        </div>\r\n\r\n\r\n                                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                            <p>${item.price}</p>\r\n                                        </div>\r\n\r\n                                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                            <p>{item.quantity} Piece(s)</p>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrderDetails\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { login, clearErrors } from '../../actions/userActions'\r\n\r\nconst Login = ({ history, location }) => {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push(redirect)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Login'} />\r\n\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mb-3\">Login</h1>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password_field\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        id=\"password_field\"\r\n                                        className=\"form-control\"\r\n                                        value={password}\r\n                                        onChange={(e) => setPassword(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                >\r\n                                    LOGIN\r\n                                </button>\r\n\r\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { register, clearErrors } from '../../actions/userActions'\r\n\r\nconst Register = ({ history }) => {\r\n\r\n    const [user, setUser] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const { name, email, password } = user;\r\n\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAuthenticated) {\r\n            history.push('/')\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n    }, [dispatch, alert, isAuthenticated, error, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('password', password);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(register(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        if (e.target.name === 'avatar') {\r\n\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setAvatarPreview(reader.result)\r\n                    setAvatar(reader.result)\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0])\r\n\r\n        } else {\r\n            setUser({ ...user, [e.target.name]: e.target.value })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'Register User'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mb-3\">Register</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                required\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                name='password'\r\n                                required\r\n                                value={password}\r\n                                onChange={onChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                           \r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                       \r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept=\"iamges/*\"\r\n                                        required\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"register_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false}\r\n                        >\r\n                            REGISTER\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Register","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport Loader from '../layout/Loader'\r\nimport MetaData from '../layout/MetaData'\r\n\r\nconst Profile = () => {\r\n\r\n    const { user, loading } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading ? <Loader /> : (\r\n                <Fragment>\r\n                    <MetaData title={'Your Profile'} />\r\n\r\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\r\n                    <div className=\"row justify-content-around mt-5 user-info\">\r\n                        <div className=\"col-12 col-md-3\">\r\n                            <figure className='avatar avatar-profile'>\r\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name} />\r\n                            </figure>\r\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\r\n                                Edit Profile\r\n                            </Link>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <h4>Full Name</h4>\r\n                            <p>{user.name}</p>\r\n\r\n                            <h4>Email Address</h4>\r\n                            <p>{user.email}</p>\r\n\r\n                            <h4>Joined On</h4>\r\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\r\n\r\n                            {user.role !== 'admin' && (\r\n                                <Link to=\"/orders/me\" className=\"btn btn-danger btn-block mt-5\">\r\n                                    My Orders\r\n                                </Link>\r\n                            )}\r\n\r\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\r\n                                Change Password\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </Fragment>\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateProfile = ({ history }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [avatar, setAvatar] = useState('')\r\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { user } = useSelector(state => state.auth);\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (user) {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setAvatarPreview(user.avatar.url)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n            dispatch(loadUser());\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PROFILE_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('avatar', avatar);\r\n\r\n        dispatch(updateProfile(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n                setAvatarPreview(reader.result)\r\n                setAvatar(reader.result)\r\n            }\r\n        }\r\n\r\n        reader.readAsDataURL(e.target.files[0])\r\n\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Profile'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Name</label>\r\n                            <input\r\n                                type=\"name\"\r\n                                id=\"name_field\"\r\n                                className=\"form-control\"\r\n                                name='name'\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                name='email'\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className='form-group'>\r\n                            <label htmlFor='avatar_upload'>Avatar</label>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div>\r\n                                    <figure className='avatar mr-3 item-rtl'>\r\n                                        <img\r\n                                            src={avatarPreview}\r\n                                            className='rounded-circle'\r\n                                            alt='Avatar Preview'\r\n                                        />\r\n                                    </figure>\r\n                                </div>\r\n                                <div className='custom-file'>\r\n                                    <input\r\n                                        type='file'\r\n                                        name='avatar'\r\n                                        className='custom-file-input'\r\n                                        id='customFile'\r\n                                        accept='image/*'\r\n                                        onChange={onChange}\r\n                                    />\r\n                                    <label className='custom-file-label' htmlFor='customFile'>\r\n                                        Choose Avatar\r\n                                </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProfile\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updatePassword, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_PASSWORD_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdatePassword = ({ history }) => {\r\n\r\n    const [oldPassword, setOldPassword] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated, loading } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('Password updated successfully')\r\n\r\n            history.push('/me')\r\n\r\n            dispatch({\r\n                type: UPDATE_PASSWORD_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('oldPassword', oldPassword);\r\n        formData.set('password', password);\r\n\r\n        dispatch(updatePassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Change Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label for=\"old_password_field\">Old Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"old_password_field\"\r\n                                className=\"form-control\"\r\n                                value={oldPassword}\r\n                                onChange={(e) => setOldPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label for=\"new_password_field\">New Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"new_password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update Password</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdatePassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst ForgotPassword = () => {\r\n\r\n    const [email, setEmail] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (message) {\r\n            alert.success(message)\r\n        }\r\n\r\n    }, [dispatch, alert, error, message])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('email', email);\r\n\r\n        dispatch(forgotPassword(formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Forgot Password'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">Forgot Password</h1>\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"email_field\">Enter Email</label>\r\n                            <input\r\n                                type=\"email\"\r\n                                id=\"email_field\"\r\n                                className=\"form-control\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"forgot_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\"\r\n                            disabled={loading ? true : false} >\r\n                            Send Email\r\n                    </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { resetPassword, clearErrors } from '../../actions/userActions'\r\n\r\nconst NewPassword = ({ history, match }) => {\r\n\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, success } = useSelector(state => state.forgotPassword)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (success) {\r\n            alert.success('Password updated successfully')\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('password', password);\r\n        formData.set('confirmPassword', confirmPassword);\r\n\r\n        dispatch(resetPassword(match.params.token, formData))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n\r\n            <MetaData title={'New Password Reset'} />\r\n\r\n            <div className=\"row wrapper\">\r\n                <div className=\"col-10 col-lg-5\">\r\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                        <h1 className=\"mb-3\">New Password</h1>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"password_field\">Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"password_field\"\r\n                                className=\"form-control\"\r\n                                value={password}\r\n                                onChange={(e) => setPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"confirm_password_field\">Confirm Password</label>\r\n                            <input\r\n                                type=\"password\"\r\n                                id=\"confirm_password_field\"\r\n                                className=\"form-control\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n\r\n                        <button\r\n                            id=\"new_password_button\"\r\n                            type=\"submit\"\r\n                            className=\"btn btn-block py-3\">\r\n                            Set Password\r\n                        </button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className=\"sidebar-wrapper\">\r\n            <nav id=\"sidebar\">\r\n                <ul className=\"list-unstyled components\">\r\n                    <li>\r\n                        <Link to=\"/dashboard\"><i className=\"fa fa-tachometer\"></i> Dashboard</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\r\n                            className=\"fa fa-product-hunt\"></i> Products</a>\r\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\r\n                            <li>\r\n                                <Link to=\"/admin/products\"><i className=\"fa fa-clipboard\"></i> All</Link>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <Link to=\"/admin/product\"><i className=\"fa fa-plus\"></i> Create</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getAdminProducts } from '../../actions/productActions'\r\nimport { allOrders } from '../../actions/orderActions'\r\nimport { allUsers } from '../../actions/userActions'\r\n\r\nconst Dashboard = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { products } = useSelector(state => state.products)\r\n    const { users } = useSelector(state => state.allUsers)\r\n    const { orders, totalAmount, loading } = useSelector(state => state.allOrders)\r\n\r\n    let outOfStock = 0;\r\n  \r\n    products.forEach(product => {\r\n        if (product.stock === 0) {\r\n            outOfStock += 1;\r\n        }\r\n    })\r\n    console.log(\"sdfghgergr\"+products);\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts())\r\n        dispatch(allOrders())\r\n        dispatch(allUsers())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <h1 className=\"my-4\">Dashboard</h1>\r\n\r\n                    {loading ? <Loader /> : (\r\n                        <Fragment>\r\n                            <MetaData title={'Admin Dashboard'} />\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-12 col-sm-12 mb-3\">\r\n                                    <div className=\"card text-white bg-primary o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"row pr-4\">\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-success o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Products<br /> <b>{products && products.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-danger o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-info o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\r\n                                        </div>\r\n                                        <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/users\">\r\n                                            <span className=\"float-left\">View Details</span>\r\n                                            <span className=\"float-right\">\r\n                                                <i className=\"fa fa-angle-right\"></i>\r\n                                            </span>\r\n                                        </Link>\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n                                <div className=\"col-xl-3 col-sm-6 mb-3\">\r\n                                    <div className=\"card text-white bg-warning o-hidden h-100\">\r\n                                        <div className=\"card-body\">\r\n                                            <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Fragment>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAdminProducts, deleteProduct, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductsList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, products } = useSelector(state => state.products);\r\n    const { error: deleteError, isDeleted } = useSelector(state => state.product)\r\n\r\n    useEffect(() => {\r\n        dispatch(getAdminProducts());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Product deleted successfully');\r\n            history.push('/admin/products');\r\n            dispatch({ type: DELETE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, deleteError, isDeleted, history])\r\n\r\n    const setProducts = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Price',\r\n                    field: 'price',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Stock',\r\n                    field: 'stock',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        products.forEach(product => {\r\n            data.rows.push({\r\n                id: product._id,\r\n                name: product.name,\r\n                price: `$${product.price}`,\r\n                stock: product.stock,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/product/${product._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteProductHandler(product._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    const deleteProductHandler = (id) => {\r\n        dispatch(deleteProduct(id))\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Products'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Products</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setProducts()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductsList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { newProduct, clearErrors } from '../../actions/productActions'\r\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst NewProduct = ({ history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, success } = useSelector(state => state.newProduct);\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (success) {\r\n            history.push('/admin/products');\r\n            alert.success('Product created successfully');\r\n            dispatch({ type: NEW_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, success, history])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(newProduct(formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'New Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">New Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                     </label>\r\n                                    </div>\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    CREATE\r\n                                </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default NewProduct\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\r\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\r\n\r\nconst UpdateProduct = ({ match, history }) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(0);\r\n    const [description, setDescription] = useState('');\r\n    const [category, setCategory] = useState('');\r\n    const [stock, setStock] = useState(0);\r\n    const [seller, setSeller] = useState('');\r\n    const [images, setImages] = useState([]);\r\n\r\n    const [oldImages, setOldImages] = useState([]);\r\n    const [imagesPreview, setImagesPreview] = useState([])\r\n\r\n    const categories = [\r\n        'Electronics',\r\n        'Cameras',\r\n        'Laptops',\r\n        'Accessories',\r\n        'Headphones',\r\n        'Food',\r\n        \"Books\",\r\n        'Clothes/Shoes',\r\n        'Beauty/Health',\r\n        'Sports',\r\n        'Outdoor',\r\n        'Home'\r\n    ]\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, product } = useSelector(state => state.productDetails)\r\n    const { loading, error: updateError, isUpdated } = useSelector(state => state.product);\r\n\r\n    const productId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        if (product && product._id !== productId) {\r\n            dispatch(getProductDetails(productId));\r\n        } else {\r\n            setName(product.name);\r\n            setPrice(product.price);\r\n            setDescription(product.description);\r\n            setCategory(product.category);\r\n            setSeller(product.seller);\r\n            setStock(product.stock)\r\n            setOldImages(product.images)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (updateError) {\r\n            alert.error(updateError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            history.push('/admin/products');\r\n            alert.success('Product updated successfully');\r\n            dispatch({ type: UPDATE_PRODUCT_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('price', price);\r\n        formData.set('description', description);\r\n        formData.set('category', category);\r\n        formData.set('stock', stock);\r\n        formData.set('seller', seller);\r\n\r\n        images.forEach(image => {\r\n            formData.append('images', image)\r\n        })\r\n\r\n        dispatch(updateProduct(product._id, formData))\r\n    }\r\n\r\n    const onChange = e => {\r\n\r\n        const files = Array.from(e.target.files)\r\n\r\n        setImagesPreview([]);\r\n        setImages([])\r\n        setOldImages([])\r\n\r\n        files.forEach(file => {\r\n            const reader = new FileReader();\r\n\r\n            reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\r\n                    setImages(oldArray => [...oldArray, reader.result])\r\n                }\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Update Product'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"wrapper my-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\r\n                                <h1 className=\"mb-4\">Update Product</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"price_field\">Price</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"price_field\"\r\n                                        className=\"form-control\"\r\n                                        value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"description_field\">Description</label>\r\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"category_field\">Category</label>\r\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\r\n                                        {categories.map(category => (\r\n                                            <option key={category} value={category} >{category}</option>\r\n                                        ))}\r\n\r\n                                    </select>\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"stock_field\">Stock</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        id=\"stock_field\"\r\n                                        className=\"form-control\"\r\n                                        value={stock}\r\n                                        onChange={(e) => setStock(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        id=\"seller_field\"\r\n                                        className=\"form-control\"\r\n                                        value={seller}\r\n                                        onChange={(e) => setSeller(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className='form-group'>\r\n                                    <label>Images</label>\r\n\r\n                                    <div className='custom-file'>\r\n                                        <input\r\n                                            type='file'\r\n                                            name='product_images'\r\n                                            className='custom-file-input'\r\n                                            id='customFile'\r\n                                            onChange={onChange}\r\n                                            multiple\r\n                                        />\r\n                                        <label className='custom-file-label' htmlFor='customFile'>\r\n                                            Choose Images\r\n                                 </label>\r\n                                    </div>\r\n\r\n                                    {oldImages && oldImages.map(img => (\r\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                    {imagesPreview.map(img => (\r\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\r\n                                    ))}\r\n\r\n                                </div>\r\n\r\n\r\n                                <button\r\n                                    id=\"login_button\"\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-block py-3\"\r\n                                    disabled={loading ? true : false}\r\n                                >\r\n                                    UPDATE\r\n                            </button>\r\n\r\n                            </form>\r\n                        </div>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\r\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst OrdersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, orders } = useSelector(state => state.allOrders);\r\n    const { isDeleted } = useSelector(state => state.order)\r\n\r\n    useEffect(() => {\r\n        dispatch(allOrders());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Order deleted successfully');\r\n            history.push('/admin/orders');\r\n            dispatch({ type: DELETE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteOrderHandler = (id) => {\r\n        dispatch(deleteOrder(id))\r\n    }\r\n\r\n    const setOrders = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Order ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'No of Items',\r\n                    field: 'numofItems',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Amount',\r\n                    field: 'amount',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Status',\r\n                    field: 'status',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\nconsole.log(orders==null);\r\n        orders.forEach(order => {\r\n            data.rows.push({\r\n                id: order._id,\r\n                numofItems: order.orderItems.length,\r\n                amount: `$${order.totalPrice}`,\r\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\r\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\r\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-eye\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteOrderHandler(order._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Orders'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Orders</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setOrders()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default OrdersList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\r\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstants'\r\n\r\nconst ProcessOrder = ({ match }) => {\r\n\r\n    const [status, setStatus] = useState('');\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\r\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\r\n    const { error, isUpdated } = useSelector(state => state.order)\r\n\r\n    const orderId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch(getOrderDetails(orderId))\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n\r\n        if (isUpdated) {\r\n            alert.success('Order updated successfully');\r\n            dispatch({ type: UPDATE_ORDER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isUpdated, orderId])\r\n\r\n\r\n    const updateOrderHandler = (id) => {\r\n\r\n        const formData = new FormData();\r\n        formData.set('status', status);\r\n\r\n        dispatch(updateOrder(id, formData))\r\n    }\r\n\r\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\r\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Process Order # ${order && order._id}`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        {loading ? <Loader /> : (\r\n                            <div className=\"row d-flex justify-content-around\">\r\n                                <div className=\"col-12 col-lg-7 order-details\">\r\n\r\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\r\n\r\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\r\n                                    <p><b>Name:</b> {user && user.name}</p>\r\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\r\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\r\n                                    <p><b>Amount:</b> ${totalPrice}</p>\r\n\r\n                                    <hr />\r\n\r\n                                    <h4 className=\"my-4\">Payment</h4>\r\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Stripe ID</h4>\r\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\r\n\r\n                                    <h4 className=\"my-4\">Order Status:</h4>\r\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\r\n\r\n\r\n\r\n                                    <h4 className=\"my-4\">Order Items:</h4>\r\n\r\n                                    <hr />\r\n                                    <div className=\"cart-item my-1\">\r\n                                        {orderItems && orderItems.map(item => (\r\n                                            <div key={item.product} className=\"row my-5\">\r\n                                                <div className=\"col-4 col-lg-2\">\r\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\r\n                                                </div>\r\n\r\n                                                <div className=\"col-5 col-lg-5\">\r\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\r\n                                                    <p>${item.price}</p>\r\n                                                </div>\r\n\r\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\r\n                                                    <p>{item.quantity} Piece(s)</p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                    <hr />\r\n                                </div>\r\n\r\n                                <div className=\"col-12 col-lg-3 mt-5\">\r\n                                    <h4 className=\"my-4\">Status</h4>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <select\r\n                                            className=\"form-control\"\r\n                                            name='status'\r\n                                            value={status}\r\n                                            onChange={(e) => setStatus(e.target.value)}\r\n                                        >\r\n                                            <option value=\"Processing\">Processing</option>\r\n                                            <option value=\"Shipped\">Shipped</option>\r\n                                            <option value=\"Delivered\">Delivered</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\r\n                                        Update Status\r\n                                    </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )}\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProcessOrder\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { allUsers, deleteUser, clearErrors } from '../../actions/userActions'\r\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UsersList = ({ history }) => {\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading, error, users } = useSelector(state => state.allUsers);\r\n    const { isDeleted } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        dispatch(allUsers());\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('User deleted successfully');\r\n            history.push('/admin/users');\r\n            dispatch({ type: DELETE_USER_RESET })\r\n        }\r\n\r\n    }, [dispatch, alert, error, isDeleted, history])\r\n\r\n    const deleteUserHandler = (id) => {\r\n        dispatch(deleteUser(id))\r\n    }\r\n\r\n    const setUsers = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'User ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Name',\r\n                    field: 'name',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Email',\r\n                    field: 'email',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Role',\r\n                    field: 'role',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        users.forEach(user => {\r\n            data.rows.push({\r\n                id: user._id,\r\n                name: user.name,\r\n                email: user.email,\r\n                role: user.role,\r\n\r\n                actions: <Fragment>\r\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\r\n                        <i className=\"fa fa-pencil\"></i>\r\n                    </Link>\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteUserHandler(user._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n                </Fragment>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'All Users'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <h1 className=\"my-5\">All Users</h1>\r\n\r\n                        {loading ? <Loader /> : (\r\n                            <MDBDataTable\r\n                                data={setUsers()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        )}\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UsersList\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\r\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\r\n\r\nconst UpdateUser = ({ history, match }) => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [role, setRole] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, isUpdated } = useSelector(state => state.user);\r\n    const { user } = useSelector(state => state.userDetails)\r\n\r\n    const userId = match.params.id;\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(user && user._id !== userId);\r\n        if (user && user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n        } else {\r\n            setName(user.name);\r\n            setEmail(user.email);\r\n            setRole(user.role)\r\n        }\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (isUpdated) {\r\n            alert.success('User updated successfully')\r\n\r\n            history.push('/admin/users')\r\n\r\n            dispatch({\r\n                type: UPDATE_USER_RESET\r\n            })\r\n        }\r\n\r\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.set('name', name);\r\n        formData.set('email', email);\r\n        formData.set('role', role);\r\n\r\n        dispatch(updateUser(user._id, formData))\r\n    }\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={`Update User`} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <div className=\"row wrapper\">\r\n                        <div className=\"col-10 col-lg-5\">\r\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\r\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"name_field\">Name</label>\r\n                                    <input\r\n                                        type=\"name\"\r\n                                        id=\"name_field\"\r\n                                        className=\"form-control\"\r\n                                        name='name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email_field\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        id=\"email_field\"\r\n                                        className=\"form-control\"\r\n                                        name='email'\r\n                                        value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"role_field\">Role</label>\r\n\r\n                                    <select\r\n                                        id=\"role_field\"\r\n                                        className=\"form-control\"\r\n                                        name='role'\r\n                                        value={role}\r\n                                        onChange={(e) => setRole(e.target.value)}\r\n                                    >\r\n                                        <option value=\"user\">user</option>\r\n                                        <option value=\"admin\">admin</option>\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateUser\r\n","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { MDBDataTable } from 'mdbreact'\r\n\r\nimport MetaData from '../layout/MetaData'\r\nimport Loader from '../layout/Loader'\r\nimport Sidebar from './Sidebar'\r\n\r\nimport { useAlert } from 'react-alert'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\r\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\r\n\r\nconst ProductReviews = () => {\r\n\r\n    const [productId, setProductId] = useState('')\r\n\r\n    const alert = useAlert();\r\n    const dispatch = useDispatch();\r\n\r\n    const { error, reviews } = useSelector(state => state.productReviews);\r\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\r\n\r\n    useEffect(() => {\r\n\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (deleteError) {\r\n            alert.error(deleteError);\r\n            dispatch(clearErrors())\r\n        }\r\n\r\n        if (productId !== '') {\r\n            dispatch(getProductReviews(productId))\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success('Review deleted successfully');\r\n            dispatch({ type: DELETE_REVIEW_RESET })\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\r\n\r\n    const deleteReviewHandler = (id) => {\r\n        dispatch(deleteReview(id, productId))\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(getProductReviews(productId))\r\n    }\r\n\r\n    const setReviews = () => {\r\n        const data = {\r\n            columns: [\r\n                {\r\n                    label: 'Review ID',\r\n                    field: 'id',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Rating',\r\n                    field: 'rating',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Comment',\r\n                    field: 'comment',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'User',\r\n                    field: 'user',\r\n                    sort: 'asc'\r\n                },\r\n                {\r\n                    label: 'Actions',\r\n                    field: 'actions',\r\n                },\r\n            ],\r\n            rows: []\r\n        }\r\n\r\n        reviews.forEach(review => {\r\n            data.rows.push({\r\n                id: review._id,\r\n                rating: review.rating,\r\n                comment: review.comment,\r\n                user: review.name,\r\n\r\n                actions:\r\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\r\n                        <i className=\"fa fa-trash\"></i>\r\n                    </button>\r\n            })\r\n        })\r\n\r\n        return data;\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <MetaData title={'Product Reviews'} />\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-2\">\r\n                    <Sidebar />\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-10\">\r\n                    <Fragment>\r\n                        <div className=\"row justify-content-center mt-5\">\r\n                            <div className=\"col-5\">\r\n                                <form onSubmit={submitHandler}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"productId_field\"\r\n                                            className=\"form-control\"\r\n                                            value={productId}\r\n                                            onChange={(e) => setProductId(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        id=\"search_button\"\r\n                                        type=\"submit\"\r\n                                        className=\"btn btn-primary btn-block py-2\"\r\n                                    >\r\n                                        SEARCH\r\n\t\t\t\t\t\t\t\t    </button>\r\n                                </ form>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        {reviews && reviews.length > 0 ? (\r\n                            <MDBDataTable\r\n                                data={setReviews()}\r\n                                className=\"px-3\"\r\n                                bordered\r\n                                striped\r\n                                hover\r\n                            />\r\n                        ) : (\r\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\r\n                            )}\r\n\r\n\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProductReviews\r\n","import React, { Fragment } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ProtectedRoute = ({ isAdmin, component: Component, ...rest }) => {\r\n\r\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\r\n\r\n    return (\r\n        <Fragment>\r\n            {loading === false && (\r\n                <Route\r\n                    {...rest}\r\n                    render={props => {\r\n                        if (isAuthenticated === false) {\r\n                            return <Redirect to='/login' />\r\n                        }\r\n\r\n                        if (isAdmin === true && user.role !== 'admin') {\r\n                            return <Redirect to=\"/\" />\r\n                        }\r\n\r\n                        return <Component {...props} />\r\n                    }}\r\n                />\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ProtectedRoute\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;","import {\r\n    ALL_PRODUCTS_REQUEST,\r\n    ALL_PRODUCTS_SUCCESS,\r\n    ALL_PRODUCTS_FAIL,\r\n    ADMIN_PRODUCTS_REQUEST,\r\n    ADMIN_PRODUCTS_SUCCESS,\r\n    ADMIN_PRODUCTS_FAIL,\r\n    NEW_PRODUCT_REQUEST,\r\n    NEW_PRODUCT_SUCCESS,\r\n    NEW_PRODUCT_RESET,\r\n    NEW_PRODUCT_FAIL,\r\n    DELETE_PRODUCT_REQUEST,\r\n    DELETE_PRODUCT_SUCCESS,\r\n    DELETE_PRODUCT_RESET,\r\n    DELETE_PRODUCT_FAIL,\r\n    UPDATE_PRODUCT_REQUEST,\r\n    UPDATE_PRODUCT_SUCCESS,\r\n    UPDATE_PRODUCT_RESET,\r\n    UPDATE_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_RESET,\r\n    NEW_REVIEW_FAIL,\r\n    GET_REVIEWS_REQUEST,\r\n    GET_REVIEWS_SUCCESS,\r\n    GET_REVIEWS_FAIL,\r\n    DELETE_REVIEW_REQUEST,\r\n    DELETE_REVIEW_SUCCESS,\r\n    DELETE_REVIEW_RESET,\r\n    DELETE_REVIEW_FAIL,\r\n    CLEAR_ERRORS\r\n\r\n} from '../constants/productConstants'\r\n\r\nexport const productsReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case ALL_PRODUCTS_REQUEST:\r\n        case ADMIN_PRODUCTS_REQUEST:\r\n            return {\r\n                loading: true,\r\n                products: []\r\n            }\r\n\r\n        case ALL_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload.products,\r\n                productsCount: action.payload.productsCount,\r\n                resPerPage: action.payload.resPerPage,\r\n                filteredProductsCount: action.payload.filteredProductsCount\r\n            }\r\n\r\n        case ADMIN_PRODUCTS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                products: action.payload\r\n            }\r\n\r\n        case ALL_PRODUCTS_FAIL:\r\n        case ADMIN_PRODUCTS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const newProductReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_PRODUCT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload.success,\r\n                product: action.payload.product\r\n            }\r\n\r\n        case NEW_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_PRODUCT_REQUEST:\r\n        case UPDATE_PRODUCT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PRODUCT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n\r\n        case DELETE_PRODUCT_FAIL:\r\n        case UPDATE_PRODUCT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PRODUCT_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                product: action.payload\r\n            }\r\n\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const newReviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case NEW_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case NEW_REVIEW_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case NEW_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                success: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewsReducer = (state = { review: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case GET_REVIEWS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case GET_REVIEWS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                reviews: action.payload\r\n            }\r\n\r\n        case GET_REVIEWS_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const reviewReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case DELETE_REVIEW_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case DELETE_REVIEW_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case DELETE_REVIEW_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_FAIL,\r\n    LOAD_USER_REQUEST,\r\n    LOAD_USER_SUCCESS,\r\n    LOAD_USER_FAIL,\r\n    UPDATE_PASSWORD_REQUEST,\r\n    UPDATE_PASSWORD_SUCCESS,\r\n    UPDATE_PASSWORD_RESET,\r\n    UPDATE_PASSWORD_FAIL,\r\n    UPDATE_PROFILE_REQUEST,\r\n    UPDATE_PROFILE_SUCCESS,\r\n    UPDATE_PROFILE_RESET,\r\n    UPDATE_PROFILE_FAIL,\r\n    FORGOT_PASSWORD_REQUEST,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_FAIL,\r\n    NEW_PASSWORD_REQUEST,\r\n    NEW_PASSWORD_SUCCESS,\r\n    NEW_PASSWORD_FAIL,\r\n    ALL_USERS_REQUEST,\r\n    ALL_USERS_SUCCESS,\r\n    ALL_USERS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    UPDATE_USER_REQUEST,\r\n    UPDATE_USER_SUCCESS,\r\n    UPDATE_USER_RESET,\r\n    UPDATE_USER_FAIL,\r\n    DELETE_USER_REQUEST,\r\n    DELETE_USER_SUCCESS,\r\n    DELETE_USER_RESET,\r\n    DELETE_USER_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/userConstants'\r\n\r\nexport const authReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case LOGIN_REQUEST:\r\n        case REGISTER_USER_REQUEST:\r\n        case LOAD_USER_REQUEST:\r\n            return {\r\n                loading: true,\r\n                isAuthenticated: false,\r\n            }\r\n\r\n        case LOGIN_SUCCESS:\r\n        case REGISTER_USER_SUCCESS:\r\n        case LOAD_USER_SUCCESS:\r\n            console.log(\"kkk\");\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: true,\r\n                user: action.payload\r\n            }\r\n\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n\r\n        case LOAD_USER_FAIL:\r\n            return {\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGOUT_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case LOGIN_FAIL:\r\n        case REGISTER_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isAuthenticated: false,\r\n                user: null,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_PROFILE_REQUEST:\r\n        case UPDATE_PASSWORD_REQUEST:\r\n        case UPDATE_USER_REQUEST:\r\n        case DELETE_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_PROFILE_SUCCESS:\r\n        case UPDATE_PASSWORD_SUCCESS:\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_PROFILE_RESET:\r\n        case UPDATE_PASSWORD_RESET:\r\n        case UPDATE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_USER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case UPDATE_PROFILE_FAIL:\r\n        case UPDATE_PASSWORD_FAIL:\r\n        case UPDATE_USER_FAIL:\r\n        case DELETE_USER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const forgotPasswordReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case FORGOT_PASSWORD_REQUEST:\r\n        case NEW_PASSWORD_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                error: null\r\n            }\r\n\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                message: action.payload\r\n            }\r\n\r\n        case NEW_PASSWORD_SUCCESS:\r\n            return {\r\n                ...state,\r\n                success: action.payload\r\n            }\r\n\r\n        case FORGOT_PASSWORD_FAIL:\r\n        case NEW_PASSWORD_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allUsersReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ALL_USERS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case ALL_USERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                users: action.payload\r\n            }\r\n\r\n        case ALL_USERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case USER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n\r\n        case USER_DETAILS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                user: action.payload\r\n            }\r\n\r\n        case USER_DETAILS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingInfo: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_TO_CART:\r\n            const item = action.payload;\r\n\r\n            const isItemExist = state.cartItems.find(i => i.product === item.product)\r\n\r\n            if (isItemExist) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.product === isItemExist.product ? item : i)\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case REMOVE_ITEM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(i => i.product !== action.payload)\r\n            }\r\n\r\n\r\n        case SAVE_SHIPPING_INFO:\r\n            return {\r\n                ...state,\r\n                shippingInfo: action.payload\r\n            }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ALL_ORDERS_REQUEST,\r\n    ALL_ORDERS_SUCCESS,\r\n    ALL_ORDERS_FAIL,\r\n    UPDATE_ORDER_REQUEST,\r\n    UPDATE_ORDER_SUCCESS,\r\n    UPDATE_ORDER_RESET,\r\n    UPDATE_ORDER_FAIL,\r\n    DELETE_ORDER_REQUEST,\r\n    DELETE_ORDER_SUCCESS,\r\n    DELETE_ORDER_RESET,\r\n    DELETE_ORDER_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS\r\n} from '../constants/orderConstants'\r\n\r\nexport const newOrderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case CREATE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case CREATE_ORDER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case CREATE_ORDER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\r\n    switch (action.type) {\r\n\r\n        case MY_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case MY_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload\r\n            }\r\n\r\n        case MY_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\r\n    switch (action.type) {\r\n\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\r\n\r\n    switch (action.type) {\r\n     \r\n        case ALL_ORDERS_REQUEST:\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case ALL_ORDERS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload.order,\r\n              \r\n                totalAmount: action.payload.totalAmount\r\n                \r\n\r\n            }\r\n           \r\n\r\n        case ALL_ORDERS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n\r\n        case UPDATE_ORDER_REQUEST:\r\n        case DELETE_ORDER_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case UPDATE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isUpdated: action.payload\r\n            }\r\n\r\n        case DELETE_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                isDeleted: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_FAIL:\r\n        case DELETE_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.payload\r\n            }\r\n\r\n        case UPDATE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isUpdated: false\r\n            }\r\n\r\n        case DELETE_ORDER_RESET:\r\n            return {\r\n                ...state,\r\n                isDeleted: false\r\n            }\r\n\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/layout/Header'\r\nimport Footer from './components/layout/Footer'\r\n\r\nimport Home from './components/Home'\r\nimport ProductDetails from './components/product/ProductDetails'\r\n\r\n// Cart Imports\r\nimport Cart from './components/cart/Cart'\r\nimport Shipping from './components/cart/Shipping'\r\nimport ConfirmOrder from './components/cart/ConfirmOrder'\r\nimport Payment from './components/cart/Payment'\r\nimport OrderSuccess from './components/cart/OrderSuccess'\r\n\r\n// Order Imports\r\nimport ListOrders from './components/order/ListOrders'\r\nimport OrderDetails from './components/order/OrderDetails'\r\n\r\n// Auth or User imports\r\nimport Login from './components/user/Login'\r\nimport Register from './components/user/Register'\r\nimport Profile from './components/user/Profile'\r\nimport UpdateProfile from './components/user/UpdateProfile'\r\nimport UpdatePassword from './components/user/UpdatePassword'\r\nimport ForgotPassword from './components/user/ForgotPassword'\r\nimport NewPassword from './components/user/NewPassword'\r\n\r\n// Admin Imports\r\nimport Dashboard from './components/admin/Dashboard'\r\nimport ProductsList from './components/admin/ProductsList'\r\nimport NewProduct from './components/admin/NewProduct'\r\nimport UpdateProduct from './components/admin/UpdateProduct'\r\nimport OrdersList from './components/admin/OrdersList'\r\nimport ProcessOrder from './components/admin/ProcessOrder'\r\nimport UsersList from './components/admin/UsersList'\r\nimport UpdateUser from './components/admin/UpdateUser'\r\nimport ProductReviews from './components/admin/ProductReviews'\r\n\r\n\r\nimport ProtectedRoute from './components/route/ProtectedRoute'\r\nimport { loadUser } from './actions/userActions'\r\nimport { useSelector } from 'react-redux'\r\nimport store from './store'\r\nimport axios from 'axios'\r\n\r\n// Payment\r\nimport { Elements } from '@stripe/react-stripe-js'\r\nimport { loadStripe } from '@stripe/stripe-js'\r\n\r\nfunction App() {\r\n\r\n  const [stripeApiKey, setStripeApiKey] = useState('');\r\n\r\n  useEffect(() => {\r\n    store.dispatch(loadUser())\r\n\r\n    async function getStripApiKey() {\r\n      const { data } = await axios.get('/api/v1/stripeapi');\r\n\r\n      setStripeApiKey(data.stripeApiKey)\r\n    }\r\n\r\n    getStripApiKey();\r\n\r\n  }, [])\r\n\r\n  const { user, isAuthenticated, loading } = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <Header />\r\n        <div className=\"container container-fluid\">\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/search/:keyword\" component={Home} />\r\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\r\n\r\n          <Route path=\"/cart\" component={Cart} exact />\r\n          <ProtectedRoute path=\"/shipping\" component={Shipping} />\r\n          <ProtectedRoute path=\"/confirm\" component={ConfirmOrder} exact />\r\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\r\n          {stripeApiKey &&\r\n            <Elements stripe={loadStripe(stripeApiKey)}>\r\n              <ProtectedRoute path=\"/payment\" component={Payment} />\r\n            </Elements>\r\n          }\r\n\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\r\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\r\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\r\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\r\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\r\n\r\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\r\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\r\n        </div>\r\n\r\n        <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\r\n        <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductsList} exact />\r\n        <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\r\n        <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\r\n        <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrdersList} exact />\r\n        <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\r\n        <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\r\n        <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\r\n        <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\r\n\r\n        {!loading && (!isAuthenticated || user.role !== 'admin') && (\r\n          <Footer />\r\n        )}\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\n\r\nimport { positions, transitions, Provider as AlertProvider } from 'react-alert';\r\nimport AlertTemplate from 'react-alert-template-basic'\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  position: positions.BOTTOM_CENTER,\r\n  transition: transitions.SCALE\r\n}\r\n\r\nReactDOM.render(\r\n  <Provider store={store} >\r\n    <AlertProvider template={AlertTemplate} {...options}>\r\n      <App />\r\n    </AlertProvider>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}